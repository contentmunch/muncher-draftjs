"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.colorStyleMap = exports.COLORS = exports.getBlockAlignment = exports.getBlockType = exports.getBlock = exports.entityFromSelection = void 0;

var entityFromSelection = function entityFromSelection(editorState) {
  var selectionState = editorState.getSelection();

  if (!selectionState.isCollapsed()) {
    var anchorKey = selectionState.getAnchorKey();
    var currentContent = editorState.getCurrentContent();
    var currentContentBlock = currentContent.getBlockForKey(anchorKey);
    var start = selectionState.getStartOffset();
    var entityId = currentContentBlock.getEntityAt(start);

    if (entityId !== null) {
      return currentContent.getEntity(entityId);
    }
  }

  return null;
};

exports.entityFromSelection = entityFromSelection;

var getBlock = function getBlock(editorState) {
  var selection = editorState.getSelection();
  return editorState.getCurrentContent().getBlockForKey(selection.getStartKey());
};

exports.getBlock = getBlock;

var getBlockType = function getBlockType(editorState) {
  return getBlock(editorState).getType();
};

exports.getBlockType = getBlockType;

var getBlockAlignment = function getBlockAlignment(editorState) {
  return getBlock(editorState).getData().get('textAlign');
};

exports.getBlockAlignment = getBlockAlignment;
var COLORS = [{
  label: 'Red',
  style: 'red'
}, {
  label: 'Orange',
  style: 'orange'
}, {
  label: 'Yellow',
  style: 'yellow'
}, {
  label: 'Green',
  style: 'green'
}, {
  label: 'Blue',
  style: 'blue'
}, {
  label: 'Indigo',
  style: 'indigo'
}, {
  label: 'Violet',
  style: 'violet'
}, {
  label: 'Black',
  style: 'black'
}, {
  label: 'Brown',
  style: 'brown'
}];
exports.COLORS = COLORS;
var colorStyleMap = {
  red: {
    color: 'rgba(255, 0, 0, 1.0)'
  },
  orange: {
    color: 'rgba(255, 127, 0, 1.0)'
  },
  yellow: {
    color: 'rgba(180, 180, 0, 1.0)'
  },
  green: {
    color: 'rgba(0, 180, 0, 1.0)'
  },
  blue: {
    color: 'rgba(0, 0, 255, 1.0)'
  },
  indigo: {
    color: 'rgba(75, 0, 130, 1.0)'
  },
  violet: {
    color: 'rgba(127, 0, 255, 1.0)'
  },
  black: {
    color: 'rgba(19, 41, 75, 1.0)'
  },
  brown: {
    color: 'rgba(168, 42, 42, 1.0)'
  }
};
exports.colorStyleMap = colorStyleMap;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlsaXRpZXMvZHJhZnQvRHJhZnRVdGlsaXRpZXMudHMiXSwibmFtZXMiOlsiZW50aXR5RnJvbVNlbGVjdGlvbiIsImVkaXRvclN0YXRlIiwic2VsZWN0aW9uU3RhdGUiLCJnZXRTZWxlY3Rpb24iLCJpc0NvbGxhcHNlZCIsImFuY2hvcktleSIsImdldEFuY2hvcktleSIsImN1cnJlbnRDb250ZW50IiwiZ2V0Q3VycmVudENvbnRlbnQiLCJjdXJyZW50Q29udGVudEJsb2NrIiwiZ2V0QmxvY2tGb3JLZXkiLCJzdGFydCIsImdldFN0YXJ0T2Zmc2V0IiwiZW50aXR5SWQiLCJnZXRFbnRpdHlBdCIsImdldEVudGl0eSIsImdldEJsb2NrIiwic2VsZWN0aW9uIiwiZ2V0U3RhcnRLZXkiLCJnZXRCbG9ja1R5cGUiLCJnZXRUeXBlIiwiZ2V0QmxvY2tBbGlnbm1lbnQiLCJnZXREYXRhIiwiZ2V0IiwiQ09MT1JTIiwibGFiZWwiLCJzdHlsZSIsImNvbG9yU3R5bGVNYXAiLCJyZWQiLCJjb2xvciIsIm9yYW5nZSIsInllbGxvdyIsImdyZWVuIiwiYmx1ZSIsImluZGlnbyIsInZpb2xldCIsImJsYWNrIiwiYnJvd24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTyxJQUFNQSxtQkFBbUIsR0FBRyxTQUF0QkEsbUJBQXNCLENBQUNDLFdBQUQsRUFBc0I7QUFDckQsTUFBTUMsY0FBYyxHQUFHRCxXQUFXLENBQUNFLFlBQVosRUFBdkI7O0FBQ0EsTUFBSSxDQUFDRCxjQUFjLENBQUNFLFdBQWYsRUFBTCxFQUFtQztBQUMvQixRQUFNQyxTQUFTLEdBQUdILGNBQWMsQ0FBQ0ksWUFBZixFQUFsQjtBQUVBLFFBQU1DLGNBQWMsR0FBR04sV0FBVyxDQUFDTyxpQkFBWixFQUF2QjtBQUVBLFFBQU1DLG1CQUFtQixHQUFHRixjQUFjLENBQUNHLGNBQWYsQ0FBOEJMLFNBQTlCLENBQTVCO0FBRUEsUUFBTU0sS0FBSyxHQUFHVCxjQUFjLENBQUNVLGNBQWYs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QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBlbnRpdHlGcm9tU2VsZWN0aW9uID0gKGVkaXRvclN0YXRlOiBhbnkpID0+IHtcbiAgICBjb25zdCBzZWxlY3Rpb25TdGF0ZSA9IGVkaXRvclN0YXRlLmdldFNlbGVjdGlvbigpO1xuICAgIGlmICghc2VsZWN0aW9uU3RhdGUuaXNDb2xsYXBzZWQoKSkge1xuICAgICAgICBjb25zdCBhbmNob3JLZXkgPSBzZWxlY3Rpb25TdGF0ZS5nZXRBbmNob3JLZXkoKTtcblxuICAgICAgICBjb25zdCBjdXJyZW50Q29udGVudCA9IGVkaXRvclN0YXRlLmdldEN1cnJlbnRDb250ZW50KCk7XG5cbiAgICAgICAgY29uc3QgY3VycmVudENvbnRlbnRCbG9jayA9IGN1cnJlbnRDb250ZW50LmdldEJsb2NrRm9yS2V5KGFuY2hvcktleSk7XG5cbiAgICAgICAgY29uc3Qgc3RhcnQgPSBzZWxlY3Rpb25TdGF0ZS5nZXRTdGFydE9mZnNldCgpO1xuXG4gICAgICAgIGNvbnN0IGVudGl0eUlkID0gY3VycmVudENvbnRlbnRCbG9jay5nZXRFbnRpdHlBdChzdGFydCk7XG5cbiAgICAgICAgaWYgKGVudGl0eUlkICE9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gY3VycmVudENvbnRlbnQuZ2V0RW50aXR5KGVudGl0eUlkKTtcbiAgICAgICAgfVxuXG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEJsb2NrID0gKGVkaXRvclN0YXRlOiBhbnkpID0+IHtcbiAgICBjb25zdCBzZWxlY3Rpb24gPSBlZGl0b3JTdGF0ZS5nZXRTZWxlY3Rpb24oKTtcbiAgICByZXR1cm4gZWRpdG9yU3RhdGVcbiAgICAgICAgLmdldEN1cnJlbnRDb250ZW50KClcbiAgICAgICAgLmdldEJsb2NrRm9yS2V5KHNlbGVjdGlvbi5nZXRTdGFydEtleSgpKTtcbn07XG5leHBvcnQgY29uc3QgZ2V0QmxvY2tUeXBlID0gKGVkaXRvclN0YXRlOiBhbnkpID0+IHtcblxuICAgIHJldHVybiBnZXRCbG9jayhlZGl0b3JTdGF0ZSkuZ2V0VHlwZSgpO1xufTtcbmV4cG9ydCBjb25zdCBnZXRCbG9ja0FsaWdubWVudCA9IChlZGl0b3JTdGF0ZTogYW55KSA9PiB7XG4gICAgcmV0dXJuIGdldEJsb2NrKGVkaXRvclN0YXRlKS5nZXREYXRhKCkuZ2V0KCd0ZXh0QWxpZ24nKTtcbn07XG5leHBvcnQgY29uc3QgQ09MT1JTID0gW1xuICAgIHtsYWJlbDogJ1JlZCcsIHN0eWxlOiAncmVkJ30sXG4gICAge2xhYmVsOiAnT3JhbmdlJywgc3R5bGU6ICdvcmFuZ2UnfSxcbiAgICB7bGFiZWw6ICdZZWxsb3cnLCBzdHlsZTogJ3llbGxvdyd9LFxuICAgIHtsYWJlbDogJ0dyZWVuJywgc3R5bGU6ICdncmVlbid9LFxuICAgIHtsYWJlbDogJ0JsdWUnLCBzdHlsZTogJ2JsdWUnfSxcbiAgICB7bGFiZWw6ICdJbmRpZ28nLCBzdHlsZTogJ2luZGlnbyd9LFxuICAgIHtsYWJlbDogJ1Zpb2xldCcsIHN0eWxlOiAndmlvbGV0J30sXG4gICAge2xhYmVsOiAnQmxhY2snLCBzdHlsZTogJ2JsYWNrJ30sXG4gICAge2xhYmVsOiAnQnJvd24nLCBzdHlsZTogJ2Jyb3duJ30sXG5dO1xuZXhwb3J0IGNvbnN0IGNvbG9yU3R5bGVNYXAgPSB7XG4gICAgcmVkOiB7XG4gICAgICAgIGNvbG9yOiAncmdiYSgyNTUsIDAsIDAsIDEuMCknLFxuICAgIH0sXG4gICAgb3JhbmdlOiB7XG4gICAgICAgIGNvbG9yOiAncmdiYSgyNTUsIDEyNywgMCwgMS4wKScsXG4gICAgfSxcbiAgICB5ZWxsb3c6IHtcbiAgICAgICAgY29sb3I6ICdyZ2JhKDE4MCwgMTgwLCAwLCAxLjApJyxcbiAgICB9LFxuICAgIGdyZWVuOiB7XG4gICAgICAgIGNvbG9yOiAncmdiYSgwLCAxODAsIDAsIDEuMCknLFxuICAgIH0sXG4gICAgYmx1ZToge1xuICAgICAgICBjb2xvcjogJ3JnYmEoMCwgMCwgMjU1LCAxLjApJyxcbiAgICB9LFxuICAgIGluZGlnbzoge1xuICAgICAgICBjb2xvcjogJ3JnYmEoNzUsIDAsIDEzMCwgMS4wKScsXG4gICAgfSxcbiAgICB2aW9sZXQ6IHtcbiAgICAgICAgY29sb3I6ICdyZ2JhKDEyNywgMCwgMjU1LCAxLjApJyxcbiAgICB9LFxuICAgIGJsYWNrOiB7XG4gICAgICAgIGNvbG9yOiAncmdiYSgxOSwgNDEsIDc1LCAxLjApJyxcbiAgICB9LFxuICAgIGJyb3duOiB7XG4gICAgICAgIGNvbG9yOiAncmdiYSgxNjgsIDQyLCA0MiwgMS4wKScsXG4gICAgfVxufTsiXX0=