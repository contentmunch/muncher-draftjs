"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StructureView = void 0;

var _react = _interopRequireDefault(require("react"));

require("codemirror/lib/codemirror.css");

require("codemirror/mode/htmlembedded/htmlembedded");

require("codemirror/addon/hint/show-hint");

require("codemirror/addon/hint/html-hint");

require("codemirror/addon/hint/show-hint.css");

require("codemirror/addon/edit/closebrackets");

require("codemirror/addon/edit/closetag");

require("codemirror/addon/fold/foldcode");

require("codemirror/addon/fold/foldgutter");

require("codemirror/addon/fold/brace-fold");

require("codemirror/addon/fold/comment-fold");

require("codemirror/addon/fold/foldgutter.css");

var _reactJsonTree = _interopRequireDefault(require("react-json-tree"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var StructureView = function StructureView(_ref) {
  var editorState = _ref.editorState;
  var theme = {
    scheme: 'monokai',
    author: 'wimer hazenberg (http://www.monokai.nl)',
    base00: '#000000',
    base01: '#383830',
    base02: '#49483e',
    base03: '#75715e',
    base04: '#a59f85',
    base05: '#f8f8f2',
    base06: '#f5f4f1',
    base07: '#f9f8f5',
    base08: '#f92672',
    base09: '#fd971f',
    base0A: '#f4bf75',
    base0B: '#a6e22e',
    base0C: '#a1efe4',
    base0D: '#66d9ef',
    base0E: '#ae81ff',
    base0F: '#cc6633'
  };

  var shouldExpandNode = function shouldExpandNode(keyName) {
    return ['blockMap', 'root'].some(function (defaultVisibleNode) {
      return keyName[0] === defaultVisibleNode;
    });
  };

  return /*#__PURE__*/_react.default.createElement(_reactJsonTree.default, {
    shouldExpandNode: shouldExpandNode,
    theme: theme,
    data: editorState.getCurrentContent()
  });
};

exports.StructureView = StructureView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy92aWV3L2NvZGUvU3RydWN0dXJlVmlldy50c3giXSwibmFtZXMiOlsiU3RydWN0dXJlVmlldyIsImVkaXRvclN0YXRlIiwidGhlbWUiLCJzY2hlbWUiLCJhdXRob3IiLCJiYXNlMDAiLCJiYXNlMDEiLCJiYXNlMDIiLCJiYXNlMDMiLCJiYXNlMDQiLCJiYXNlMDUiLCJiYXNlMDYiLCJiYXNlMDciLCJiYXNlMDgiLCJiYXNlMDkiLCJiYXNlMEEiLCJiYXNlMEIiLCJiYXNlMEMiLCJiYXNlMEQiLCJiYXNlMEUiLCJiYXNlMEYiLCJzaG91bGRFeHBhbmROb2RlIiwia2V5TmFtZSIsInNvbWUiLCJkZWZhdWx0VmlzaWJsZU5vZGUiLCJnZXRDdXJyZW50Q29udGVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBR08sSUFBTUEsYUFBMkMsR0FBRyxTQUE5Q0EsYUFBOEMsT0FDckM7QUFBQSxNQUFqQkMsV0FBaUIsUUFBakJBLFdBQWlCO0FBQ2xCLE1BQU1DLEtBQUssR0FBRztBQUNWQyxJQUFBQSxNQUFNLEVBQUUsU0FERTtBQUNTQyxJQUFBQSxNQUFNLEVBQUUseUNBRGpCO0FBQzREQyxJQUFBQSxNQUFNLEVBQUUsU0FEcEU7QUFFVkMsSUFBQUEsTUFBTSxFQUFFLFNBRkU7QUFFU0MsSUFBQUEsTUFBTSxFQUFFLFNBRmpCO0FBRTRCQyxJQUFBQSxNQUFNLEVBQUUsU0FGcEM7QUFFK0NDLElBQUFBLE1BQU0sRUFBRSxTQUZ2RDtBQUdWQyxJQUFBQSxNQUFNLEVBQUUsU0FIRTtBQUdTQyxJQUFBQSxNQUFNLEVBQUUsU0FIakI7QUFHNEJDLElBQUFBLE1BQU0sRUFBRSxTQUhwQztBQUcrQ0MsSUFBQUEsTUFBTSxFQUFFLFNBSHZEO0FBSVZDLElBQUFBLE1BQU0sRUFBRSxTQUpFO0FBSVNDLElBQUFBLE1BQU0sRUFBRSxTQUpqQjtBQUk0QkMsSUFBQUEsTUFBTSxFQUFFLFNBSnBDO0FBSStDQyxJQUFBQSxNQUFNLEVBQUUsU0FKdkQ7QUFLVkMsSUFBQUEsTUFBTSxFQUFFLFNBTEU7QUFLU0MsSUFBQUEsTUFBTSxFQUFFLFNBTGpCO0FBSzRCQyxJQUFBQSxNQUFNLEVBQUU7QUFMcEMsR0FBZDs7QUFPQSxNQUFNQyxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQW1CLENBQUNDLE9BQUQsRUFBa0I7QUFDdkMsV0FBTyxDQUFDLFVBQUQsRUFBYSxNQUFiLEVBQXFCQyxJQUFyQixDQUNILFVBQUFDLGtCQUFrQjtBQUFBLGFBQUlGLE9BQU8sQ0FBQyxDQUFELENBQVAsS0FBZUUsa0JBQW5CO0FBQUEsS0FEZixDQUFQO0FBR0gsR0FKRDs7QUFLQSxzQkFDSSw2QkFBQyxzQkFBRDtBQUNJLElBQUEsZ0JBQWdCLEVBQUVILGdCQUR0QjtBQUVJLElBQUEsS0FBSyxFQUFFbkIsS0FGWDtBQUdJLElBQUEsSUFBSSxFQUFFRCxXQUFXLENBQUN3QixpQkFBWjtBQUhWLElBREo7QUFPSCxDQXJCTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAnY29kZW1pcnJvci9saWIvY29kZW1pcnJvci5jc3MnO1xuaW1wb3J0IFwiY29kZW1pcnJvci9tb2RlL2h0bWxlbWJlZGRlZC9odG1sZW1iZWRkZWRcIjtcbmltcG9ydCBcImNvZGVtaXJyb3IvYWRkb24vaGludC9zaG93LWhpbnRcIjtcbmltcG9ydCBcImNvZGVtaXJyb3IvYWRkb24vaGludC9odG1sLWhpbnRcIjtcbmltcG9ydCBcImNvZGVtaXJyb3IvYWRkb24vaGludC9zaG93LWhpbnQuY3NzXCI7XG5pbXBvcnQgXCJjb2RlbWlycm9yL2FkZG9uL2VkaXQvY2xvc2VicmFja2V0c1wiO1xuaW1wb3J0IFwiY29kZW1pcnJvci9hZGRvbi9lZGl0L2Nsb3NldGFnXCI7XG5pbXBvcnQgXCJjb2RlbWlycm9yL2FkZG9uL2ZvbGQvZm9sZGNvZGVcIjtcbmltcG9ydCBcImNvZGVtaXJyb3IvYWRkb24vZm9sZC9mb2xkZ3V0dGVyXCI7XG5pbXBvcnQgXCJjb2RlbWlycm9yL2FkZG9uL2ZvbGQvYnJhY2UtZm9sZFwiO1xuaW1wb3J0IFwiY29kZW1pcnJvci9hZGRvbi9mb2xkL2NvbW1lbnQtZm9sZFwiO1xuaW1wb3J0IFwiY29kZW1pcnJvci9hZGRvbi9mb2xkL2ZvbGRndXR0ZXIuY3NzXCI7XG5pbXBvcnQgSlNPTlRyZWUgZnJvbSBcInJlYWN0LWpzb24tdHJlZVwiO1xuaW1wb3J0IHtFZGl0b3JTdGF0ZX0gZnJvbSBcImRyYWZ0LWpzXCI7XG5cbmV4cG9ydCBjb25zdCBTdHJ1Y3R1cmVWaWV3OiBSZWFjdC5GQzxTdHJ1Y3R1cmVWaWV3UHJvcHM+ID0gKFxuICAgIHtlZGl0b3JTdGF0ZX0pID0+IHtcbiAgICBjb25zdCB0aGVtZSA9IHtcbiAgICAgICAgc2NoZW1lOiAnbW9ub2thaScsIGF1dGhvcjogJ3dpbWVyIGhhemVuYmVyZyAoaHR0cDovL3d3dy5tb25va2FpLm5sKScsIGJhc2UwMDogJyMwMDAwMDAnLFxuICAgICAgICBiYXNlMDE6ICcjMzgzODMwJywgYmFzZTAyOiAnIzQ5NDgzZScsIGJhc2UwMzogJyM3NTcxNWUnLCBiYXNlMDQ6ICcjYTU5Zjg1JyxcbiAgICAgICAgYmFzZTA1OiAnI2Y4ZjhmMicsIGJhc2UwNjogJyNmNWY0ZjEnLCBiYXNlMDc6ICcjZjlmOGY1JywgYmFzZTA4OiAnI2Y5MjY3MicsXG4gICAgICAgIGJhc2UwOTogJyNmZDk3MWYnLCBiYXNlMEE6ICcjZjRiZjc1JywgYmFzZTBCOiAnI2E2ZTIyZScsIGJhc2UwQzogJyNhMWVmZTQnLFxuICAgICAgICBiYXNlMEQ6ICcjNjZkOWVmJywgYmFzZTBFOiAnI2FlODFmZicsIGJhc2UwRjogJyNjYzY2MzMnXG4gICAgfTtcbiAgICBjb25zdCBzaG91bGRFeHBhbmROb2RlID0gKGtleU5hbWU6IGFueSkgPT4ge1xuICAgICAgICByZXR1cm4gWydibG9ja01hcCcsICdyb290J10uc29tZShcbiAgICAgICAgICAgIGRlZmF1bHRWaXNpYmxlTm9kZSA9PiBrZXlOYW1lWzBdID09PSBkZWZhdWx0VmlzaWJsZU5vZGUsXG4gICAgICAgICk7XG4gICAgfTtcbiAgICByZXR1cm4gKFxuICAgICAgICA8SlNPTlRyZWVcbiAgICAgICAgICAgIHNob3VsZEV4cGFuZE5vZGU9e3Nob3VsZEV4cGFuZE5vZGV9XG4gICAgICAgICAgICB0aGVtZT17dGhlbWV9XG4gICAgICAgICAgICBkYXRhPXtlZGl0b3JTdGF0ZS5nZXRDdXJyZW50Q29udGVudCgpfVxuICAgICAgICAvPlxuICAgICk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RydWN0dXJlVmlld1Byb3BzIHtcbiAgICBlZGl0b3JTdGF0ZTogRWRpdG9yU3RhdGU7XG59Il19